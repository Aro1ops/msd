Для создания игры, похожей на Hamster Combat, с дизайном и функционалом, который вы описали, потребуется HTML, CSS, и JavaScript. Вот пример кода, который реализует основные функции, такие как нажатие на изображение, изменение изображения, прокачка кликов и энергии, отображение счетчика и сохранение данных с помощью Local Storage.

```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coin Clicker Game</title>
    <style>
        /* Стили для страницы */
        body, html {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            background-color: #f0f0f0;
            height: 100%;
            user-select: none; /* Отключение выделения текста */
        }

        #coin {
            width: 45%; /* Размер монеты относительно экрана */
            position: absolute;
            bottom: 30%; /* Позиция монеты ниже середины экрана */
            transition: transform 0.1s, opacity 0.1s;
        }

        #click-counter {
            position: absolute;
            top: 20%;
            font-size: 2rem;
            font-weight: bold;
        }

        #hotbar-container {
            position: absolute;
            top: 10%;
            width: 90%;
            height: 25px;
            background-color: #ccc;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: left;
            overflow: hidden;
        }

        #hotbar {
            background-color: #76c7c0;
            height: 100%;
            transition: width 0.2s;
        }

        #hotbar-text {
            position: absolute;
            right: 5%;
            font-size: 1rem;
            font-weight: bold;
        }

        #change-image, #shop-button {
            position: absolute;
            bottom: 10%;
            padding: 15px 30px;
            font-size: 1.5rem;
            border-radius: 5px;
            cursor: pointer;
            border: none;
        }

        #change-image {
            left: 5%;
            background-color: #ffcc00;
        }

        #shop-button {
            right: 5%;
            background-color: #00ccff;
        }

        .hidden {
            display: none;
        }

        #change-menu, #shop-menu {
            position: absolute;
            bottom: 20%;
            width: 90%;
            height: 50%;
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: none;
            flex-direction: column;
            justify-content: space-between;
        }

        .option-button {
            font-size: 1.2rem;
            padding: 10px;
            margin: 10px 0;
            cursor: pointer;
            border-radius: 5px;
            border: none;
        }

        .back-button {
            padding: 10px 20px;
            font-size: 1.5rem;
            border-radius: 5px;
            cursor: pointer;
            border: none;
            background-color: #ff6666;
            margin-top: 10px;
        }

        #shop-menu p, #change-menu p {
            margin: 0;
        }
    </style>
</head>
<body>
    <!-- Счетчик нажатий -->
    <div id="click-counter">0</div>
    
    <!-- Полоса энергии -->
    <div id="hotbar-container">
        <div id="hotbar" style="width: 100%;"></div>
        <div id="hotbar-text">2000/2000</div>
    </div>
    
    <!-- Монета -->
    <img src="coin.png" id="coin">
    
    <!-- Кнопки для изменения изображения и открытия магазина -->
    <button id="change-image">Изменить</button>
    <button id="shop-button">Магазин</button>
    
    <!-- Меню изменения изображения -->
    <div id="change-menu" class="hidden">
        <button class="option-button" data-image="coin1.png">Монета 1</button>
        <button class="option-button" data-image="coin2.png">Монета 2</button>
        <button class="option-button" data-image="coin3.png">Монета 3</button>
        <button class="option-button" data-image="coin4.png">Монета 4</button>
        <button class="back-button">Назад</button>
    </div>
    
    <!-- Меню магазина -->
    <div id="shop-menu" class="hidden">
        <p>Улучшение клика:</p>
        <button class="option-button" id="buy-click">Купить +1 клик (50)</button>
        <small>Текущий бонус: +1</small>
        <p>Улучшение энергии:</p>
        <button class="option-button" id="buy-energy">Увеличить энергию до 2500 (3000)</button>
        <small>Текущая энергия: 2000/2000</small>
        <p>Улучшение регенерации:</p>
        <button class="option-button" id="buy-regeneration">Снизить интервал до 9.9 сек (2000)</button>
        <small>Текущий интервал: 10 сек</small>
        <button class="back-button">Назад</button>
    </div>
    
    <script>
        // Переменные
        let clickCount = 0;
        let clickValue = 1;
        let energy = 2000;
        let maxEnergy = 2000;
        let regenerationRate = 10;
        let clickCooldown = false;
        let selectedImage = 'coin.png';

        // Элементы
        const clickCounter = document.getElementById('click-counter');
        const coin = document.getElementById('coin');
        const hotbar = document.getElementById('hotbar');
        const hotbarText = document.getElementById('hotbar-text');
        const changeMenu = document.getElementById('change-menu');
        const shopMenu = document.getElementById('shop-menu');
        const changeImageButton = document.getElementById('change-image');
        const shopButton = document.getElementById('shop-button');

        // Функция обновления полосы энергии
        function updateHotbar() {
            const percentage = (energy / maxEnergy) * 100;
            hotbar.style.width = percentage + '%';
            hotbarText.textContent = `${energy}/${maxEnergy}`;
        }

        // Функция клика по монете
        function clickCoin() {
            if (energy > 0 && !clickCooldown) {
                clickCount += clickValue;
                clickCounter.textContent = clickCount;
                energy -= clickValue;
                updateHotbar();

                // Анимация нажатия на монету
                coin.style.transform = 'scale(0.95)';
                coin.style.opacity = '0.7';
                setTimeout(() => {
                    coin.style.transform = 'scale(1)';
                    coin.style.opacity = '1';
                }, 100);

                // Показ числа над монетой
                const floatingNumber = document.createElement('div');
                floatingNumber.textContent = `+${clickValue}`;
                floatingNumber.style.position = 'absolute';
                floatingNumber.style.bottom = '50%';
                floatingNumber.style.left = '50%';
                floatingNumber.style.transform = 'translate(-50%, -50%)';
                floatingNumber.style.fontSize = '2rem';
                floatingNumber.style.color = '#00cc00';
                document.body.appendChild(floatingNumber);

                // Анимация исчезновения числа
                setTimeout(() => {
                    floatingNumber.style.transition = 'all 0.5s';
                    floatingNumber.style.transform = 'translate(-50%, -100%)';
                    floatingNumber.style.opacity = '0';
                    setTimeout(() => document.body.removeChild(floatingNumber), 500);
                }, 500);
            }
        }

        // Обработчик кликов по монете
        coin.addEventListener('click', clickCoin);

        // Обработчики для кнопок изменения изображения и магазина
        changeImageButton.addEventListener('click', () => {
            changeMenu.classList.toggle('hidden');
        });

        shopButton.addEventListener('click', () => {
            shopMenu.classList.toggle('hidden');
        });

        document.querySelectorAll('.back-button').forEach(button => {
            button.addEventListener('click', () => {
                changeMenu.classList.add('hidden');
                shopMenu.classList.add('hidden');
            });
        });

        // Изменение изображения монеты
        document.querySelectorAll('.option-button').forEach(button => {
            button.addEventListener('click', (e) => {
                const newImage = e.target.getAttribute('data-image');
                selectedImage = newImage;
                coin.src = selectedImage;
                clickCount = 0; // Сброс счетчика при смене монеты
                clickCounter.textContent = clickCount;
            });
        });

        // Функции прокачки
        document.getElementById('buy-click').addEventListener('click', () => {
            const price = clickValue * 50;
            if (clickCount >= price) {
                clickCount -= price;
                clickValue += 1;
                localStorage.setItem('clickCount', clickCount);
                updateHotbar();
            }
        });

        // Функция регенерации энергии
        setInterval(() => {
            if (energy < maxEnergy && energy > 0) {
                energy += 1;
                updateHotbar();
            }
        }, 10000); // Регенерация каждую секунду

        // Сохранение состояния в Local Storage
        window.onload = () => {
            const savedClicks = localStorage.getItem('clickCount');
            if (savedClicks) {
                clickCount = parseInt(savedClicks);
            }
            updateHotbar();
        };

        // Ежедневная награда
        setInterval(() => {
            const now = new Date();
            if (now.getHours() === 11 && now.getMinutes() === 0) {
                clickCount += 1000;
                localStorage.setItem('clickCount', clickCount);
                updateHotbar();
            }
        }, 60000); // Проверять каждую минуту
    </script>
</body>
</html>
```

### Описание кода:
1. **HTML**: Содержит структуру игры с элементами для монеты, счетчика, кнопок и меню.
2. **CSS**: Оформляет элементы на странице, создавая дизайн, подходящий для мобильных устройств.
3. **JavaScript**: Реализует логику игры, включая клики по монете, изменение изображений, прокачку, сохранение данных с помощью Local Storage, и ежедневные награды.

### Ф